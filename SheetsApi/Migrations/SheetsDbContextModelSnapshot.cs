// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SheetsApi.Shared;
using System;

namespace SheetsApi.Migrations
{
    [DbContext(typeof(SheetsDbContext))]
    partial class SheetsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("SheetsApi.Shared.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddedByUserId");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Modified");

                    b.Property<int?>("ModifiedByUserId");

                    b.Property<string>("Name");

                    b.Property<int?>("SheetId");

                    b.Property<string>("Text");

                    b.Property<int?>("WeaponId");

                    b.HasKey("Id");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("SheetId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("SheetsApi.Shared.SheetsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SheetsApi.Shared.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddedByUserId");

                    b.Property<int>("ArmorPenetration");

                    b.Property<DateTime>("Created");

                    b.Property<int>("Damage");

                    b.Property<DateTime>("Modified");

                    b.Property<int?>("ModifiedByUserId");

                    b.Property<string>("Name");

                    b.Property<int>("Range");

                    b.Property<int?>("SheetId");

                    b.Property<int>("Strength");

                    b.Property<int?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("SheetId");

                    b.HasIndex("TypeId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("SheetsApi.Shared.WeaponType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddedByUserId");

                    b.Property<string>("Attacks");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Modified");

                    b.Property<int?>("ModifiedByUserId");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("WeaponTypes");
                });

            modelBuilder.Entity("SheetsApi.Sheets.Sheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddedByUserId");

                    b.Property<int>("Attacks");

                    b.Property<int>("BallisticSkill");

                    b.Property<DateTime>("Created");

                    b.Property<int>("InvulnerableSave");

                    b.Property<int>("Leadership");

                    b.Property<DateTime>("Modified");

                    b.Property<int?>("ModifiedByUserId");

                    b.Property<int>("Movement");

                    b.Property<string>("Name");

                    b.Property<int>("Save");

                    b.Property<int>("Strength");

                    b.Property<int>("Toughness");

                    b.Property<int>("WeaponSkill");

                    b.Property<int>("Wounds");

                    b.HasKey("Id");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("Sheets");
                });

            modelBuilder.Entity("SheetsApi.Shared.Rule", b =>
                {
                    b.HasOne("SheetsApi.Shared.SheetsUser", "AddedByUser")
                        .WithMany()
                        .HasForeignKey("AddedByUserId");

                    b.HasOne("SheetsApi.Shared.SheetsUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");

                    b.HasOne("SheetsApi.Sheets.Sheet")
                        .WithMany("Rules")
                        .HasForeignKey("SheetId");

                    b.HasOne("SheetsApi.Shared.Weapon")
                        .WithMany("Rules")
                        .HasForeignKey("WeaponId");
                });

            modelBuilder.Entity("SheetsApi.Shared.Weapon", b =>
                {
                    b.HasOne("SheetsApi.Shared.SheetsUser", "AddedByUser")
                        .WithMany()
                        .HasForeignKey("AddedByUserId");

                    b.HasOne("SheetsApi.Shared.SheetsUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");

                    b.HasOne("SheetsApi.Sheets.Sheet")
                        .WithMany("Weapons")
                        .HasForeignKey("SheetId");

                    b.HasOne("SheetsApi.Shared.WeaponType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("SheetsApi.Shared.WeaponType", b =>
                {
                    b.HasOne("SheetsApi.Shared.SheetsUser", "AddedByUser")
                        .WithMany()
                        .HasForeignKey("AddedByUserId");

                    b.HasOne("SheetsApi.Shared.SheetsUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");
                });

            modelBuilder.Entity("SheetsApi.Sheets.Sheet", b =>
                {
                    b.HasOne("SheetsApi.Shared.SheetsUser", "AddedByUser")
                        .WithMany()
                        .HasForeignKey("AddedByUserId");

                    b.HasOne("SheetsApi.Shared.SheetsUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
